# application 파일 (확장자 .properties, .yml 동일)
# : 애플리케이션의 설정 정보를 관리하는 파일

## 파일의 역할 및 용도
# 1. 서버 환경 설정 - 서버 포트 번호 등을 관리
# 2. 데이터베이스 설정 - URL, 사용자명, 비밀번호 등을 정의
# 3. JPA 및 Hibernate 설정 - DB와의 상호작용 시 엔터티 매핑 방식과 SQL 출력 여부 등의 설정을 관리

## 동작 방식
# .properties와 .yml이 모두 존재할 경우 - .properies가 우선 적용

## .porperties  VS  .yml
# 1. .properties
#   : 주로 설정이 단순하거나 개발 초기 단계에서 사용

# 2. .yml
#   : 설정이 복잡하고 중첩된 구조가 필요할 때 선호

# 3. 형식 및 구조 차이
# 3-1) .properties
# : 키-값 쌍의 형태로 설정

# 3-2) .yml
# : 가독성이 좋고 복잡한 설정을 쉽게 관리

# 배열 표현 차이가 있음

server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/springboot_db
    username: root
    password: "!Dydekd7511"
#  profiles:
#    active:
#      - dev
#      - prod
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
